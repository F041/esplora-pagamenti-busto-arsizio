name: Aggiorna Database da Release Esterna

on:
  workflow_dispatch:
  schedule:
    - cron: '0 4 1 * *'

jobs:
  fetch_and_update_db:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout codice esploratore (questo repo)
        uses: actions/checkout@v4

      - name: Definisci nome file e URL del database
        id: db_info
        run: |
          echo "DB_FILENAME=busto_pagamenti.db" >> $GITHUB_OUTPUT # O pagamenti_slim.db
          echo "DB_URL=https://github.com/F041/osservatorio-statistico-bustoarsizio-tubatura-dati/releases/latest/download/busto_pagamenti.db" >> $GITHUB_OUTPUT

      - name: Scarica ultimo database dalla release
        run: |
          echo "Scaricamento database da ${{ steps.db_info.outputs.DB_URL }}..."
          curl -L -o ${{ steps.db_info.outputs.DB_FILENAME }} "${{ steps.db_info.outputs.DB_URL }}"
          if [ $? -ne 0 ]; then
            echo "Errore durante lo scaricamento del database."
            exit 1
          fi
          echo "Database scaricato come ${{ steps.db_info.outputs.DB_FILENAME }}"

      - name: Registra data aggiornamento
        id: update_date
        run: |
          # Formatta la data come preferisci (YYYY-MM-DD HH:MM:SS UTC)
          # Oppure solo YYYY-MM-DD
          # CURRENT_DATE=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          CURRENT_DATE_SIMPLE=$(date -u +"%d/%m/%Y") # Formato DD/MM/YYYY
          echo "Data e ora dell'aggiornamento: $CURRENT_DATE_SIMPLE"
          # Crea un semplice file JSON
          echo "{\"lastUpdate\": \"$CURRENT_DATE_SIMPLE\"}" > last_update.json
          # Oppure un semplice file di testo
          # echo "$CURRENT_DATE_SIMPLE" > last_update.txt
          echo "File last_update.json creato."

      - name: Committa e Pusha file aggiornati (DB e data)
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          git add ${{ steps.db_info.outputs.DB_FILENAME }} 
          git add last_update.json # Aggiungi anche il file della data
          
          if git diff --staged --quiet; then
            echo "Nessun cambiamento nei dati da committare."
          else
            git commit -m "Aggiornamento automatico database e data (${{ steps.db_info.outputs.DB_FILENAME }})"
            git push
            echo "Push completato."
          fi